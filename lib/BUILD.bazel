load("@rules_foreign_cc//tools/build_defs:configure.bzl", "configure_make")

load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_executable",
    "ocaml_module",
    "ocaml_ns_archive",
    "ocaml_signature",
)

##############
ocaml_ns_archive(
    name = "sodium",
    opts = ["-linkall"],
    submodules = [
        ":Sodium_storage",
        "//lib_gen:Sodium_bindings",
        "//lib_gen:Sodium_generated",
        "//lib_gen:Sodium_types",
        "//lib_gen:Sodium_types_detected",
        ":_Sodium",
        # "//lib_gen:Sodium_types",
        # "//lib_gen:Sodium_types_detected",
    ],
    visibility = ["//visibility:public"],
)

#############
ocaml_module(
    name = "_Sodium",
    sig  = ":_Sodium.cmi",
    struct = "sodium.ml",
    cc_deps = {
        "//lib_gen:sodium_stubs": "default",
        ":libsodium": "default",
    },
    deps = [
        ":Sodium_storage",
        "//lib_gen:Sodium_bindings",
        "//lib_gen:Sodium_generated",
        "//lib_gen:Sodium_types",
        "//lib_gen:Sodium_types_detected",
    ],
    deps_opam = [
       "bigarray",
        "bytes",
        "ctypes.stubs",
    ],
    # visibility = ["//visibility:public"],
   # visibility = ["//lib_gen:__pkg__"]
)

ocaml_signature(
    name = "_Sodium.cmi",
    src = "sodium.mli",
)

#############
ocaml_module(
    name = "Sodium_storage",
    opts = select({
        "@ocaml//verbose:enabled": ["-absname"],
        "//conditions:default": [],
    }),
    struct = "sodium_storage.ml",
    visibility = [
        # ":__pkg__",
        "//lib_gen:__pkg__",
    ],
    deps_opam = ["ctypes"],
)

################################################################
configure_make(
    name = "libsodium",
    configure_env_vars = select({
        "//bzl/host:macos": {
            "AR": "",
            "CFLAGS": "--std=c99 -Wall -pedantic -Wno-pointer-sign",
            "CXXFLAGS": "-Wall -pedantic -Wno-pointer-sign",
        },
        "//conditions:default": {},
    }),
    lib_source = "@libsodium//:all",
    out_lib_dir = "lib",
    shared_libraries = select(
        {
            "//bzl/host:macos": ["libsodium.dylib"],
            "//bzl/host:linux": ["libsodium.so"],
        },
        no_match_error = "Unsupported platform. Linux or MacOS only.",
    ),
    static_libraries = ["libsodium.a"],
    visibility = ["//visibility:public"],
)
