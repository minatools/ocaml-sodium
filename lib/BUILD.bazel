load("@rules_foreign_cc//tools/build_defs:configure.bzl", "configure_make")

load("@obazl_rules_ocaml//ocaml:rules.bzl",
     "ocaml_archive",
     "ocaml_executable",
     "ocaml_interface",
     "ocaml_module")

LINKOPTS = select({
    "@ocaml//mode:bytecode": ["-dllib", "-sodium_stubs"],
    "@ocaml//mode:native": ["-cclib", "-lsodium_stubs"]
})

LINKDEPS = select({
    "@ocaml//mode:bytecode": [],
    "@ocaml//mode:native": []
})

##############
ocaml_archive(
    name = "sodium",
    opts = [    ],
    deps = [
        "//lib_gen:Sodium_generated",
        "//lib_gen:Sodium_types",
        "//lib_gen:Sodium_types_detected",
        ":_Sodium",
        ":Sodium_storage",
    ],
    cc_deps = {
        ":libsodium": "default",
        "//lib_gen:sodium_stubs": "default"
    },
    visibility = ["//visibility:public"],
)

#############
ocaml_module(
    name = "_Sodium",
    src  = "sodium.ml",
    intf = ":_Sodium.cmi",
    opts = [],
    deps = [
        "@opam//pkg:bytes",
        "@opam//pkg:bigarray",
        "@opam//pkg:ctypes.stubs",
        ":Sodium_storage",
        "//lib_gen:Sodium_bindings",
        "//lib_gen:Sodium_generated"
    ],
    visibility = ["//visibility:public"]
    # visibility = ["//lib_gen:__pkg__"]
)

ocaml_interface(
    name = "_Sodium.cmi",
    src  = "sodium.mli",
)

#############
ocaml_module(
    name = "Sodium_storage",
    src = "sodium_storage.ml",
    opts = select({
        "@ocaml//verbose:enabled": ["-absname"],
        "//conditions:default": []
    }),
    deps = ["@opam//pkg:ctypes"],
    visibility = [
        ":__pkg__",
        "//lib_gen:__pkg__"
    ]
)

configure_make(
    name = "libsodium",
    configure_env_vars = select({
        "//bzl/host:macos": {
            "AR": "",
            "CFLAGS": "--std=c99 -Wall -pedantic -Wno-pointer-sign",
            "CXXFLAGS":  "-Wall -pedantic -Wno-pointer-sign"
        },
        "//conditions:default": {}
    }),
    lib_source = "@libsodium//:all",
    out_lib_dir = "lib",
    static_libraries = ["libsodium.a"],
    shared_libraries = select({
        "//bzl/host:macos": ["libsodium.dylib"],
        "//bzl/host:linux": ["libsodium.so"],
        # "//conditions:default": [],
    }),
    visibility = ["//visibility:public"],
)
